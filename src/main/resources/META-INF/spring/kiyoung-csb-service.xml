<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
         http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
          

	<context:component-scan base-package="com.kiyoung.cloud"></context:component-scan>
	
	<camelContext xmlns="http://camel.apache.org/schema/spring">
	<!--동작하는 엔드포인트[1] -->
	<!--  <endpoint id="thumbMQ_Queue1" uri="rabbitmq://${rabbitMQ.IP}:${rabbitMQ.Port}/amq.direct?connectionFactory=#customConnectionFactory&amp;autoDelete=false"/>-->
	
	
	<!-- 동작하는 엔드포인트[2] 큐 명시 안함 -->
	<!--  <endpoint id="thumbMQ_Queue1" uri="rabbitmq://${rabbitMQ.IP}:${rabbitMQ.Port}/${rabbitMQ.Exchange4}?connectionFactory=#customConnectionFactory&amp;autoDelete=false"/> -->
	
	<!-- 동작하는 엔드포인트[3] 겁나 이상함 -->
	<endpoint id="thumbMQ_Queue1" uri="rabbitmq://${rabbitMQ.IP}:${rabbitMQ.Port}/${rabbitMQ.Exchange4}?connectionFactory=#customConnectionFactory&amp;queue=${rabbitMQ.QueueName4}?bindingArgs=#bindArgs&amp;autoDelete=false"/> 
	<endpoint id="rabbitMQ_Queue1" uri="rabbitmq://${rabbitMQ.IP}:${rabbitMQ.Port}/${rabbitMQ.Exchange1}?connectionFactory=#customConnectionFactory&amp;autoDelete=false"/>
	<endpoint id="rabbitMQ_Queue2" uri="rabbitmq://${rabbitMQ.IP}:${rabbitMQ.Port}/${rabbitMQ.Exchange2}?connectionFactory=#customConnectionFactory&amp;autoDelete=false"/>
	
	<!-- 참고 -->
	<!-- <endpoint id="rabbitMQ_Queue2" uri="rabbitmq://${rabbitMQ.IP}:${rabbitMQ.Port}/${rabbitMQ.Exchange2}?connectionFactory=#customConnectionFactory&amp;queue=${rabbitMQ.QueueName2}&amp;autoDelete=false&amp;durable=true"/> -->
	</camelContext>
	
	<routeContext
		xmlns="http://camel.apache.org/schema/spring" id="SERVICE_ROUTE">

		<route id="LOGIN-SERVICE-CALL">
			<from uri="direct:login-sevice-call" />
			<process ref="loginServiceProcess"/>
			<process ref="resultCode" />
		</route>
		<!-- SERVICE-CALL사용 안하고 있음. 사용 안하면 없앨 예정  -->
		<route id="SERVICE-CALL">
			<from uri="direct:service-call"/>
			<process ref="serviceProcess" />
			<process ref="resultCode"/>
		</route>
		        
		        
		<route>
            <from uri="direct:rabbitMQThumb"/>
            <to uri="thumbMQ_Queue1"/>
        </route>
        <route>
           <from uri="thumbMQ_Queue1" />
           <to uri="bean:thumbImageService?method=getThumbNail"/>
        </route>
		
		
		<route>
			<from uri="direct:rabbitMQ1"/>
			<to uri="rabbitMQ_Queue1"/>
		</route>
		<route>
			<from uri="rabbitMQ_Queue1" />
			<to uri="bean:IndexService?method=getQueue"/>
		</route>
		<!-- <route>
			<from uri="direct:rabbitMQ2"/>
			<to uri="rabbitMQ_Queue2"/>
		</route>  -->
		
		
		
	</routeContext>

	<bean id="serviceProcess" class="com.kiyoung.cloud.common.service.ServiceProcess"/>
	
	<bean id="loginServiceProcess" class="com.kiyoung.cloud.common.service.LoginServiceProcess" />

	<bean id="resultCode" class="com.kiyoung.cloud.common.service.ResultCodeProcessor">
		<property name="resultCodeElement" value="resultCode" />  <!-- Optional Element -->
		<property name="defaultResultCode" value="0000" />  <!-- Optional Element -->
	</bean>

	<bean id="customConnectionFactory" class="com.rabbitmq.client.ConnectionFactory">
	  <property name="host" value="${rabbitMQ.IP}"/>
	  <property name="port" value="${rabbitMQ.Port}"/>
	  <property name="username" value="${rabbitMQ.Username}"/>
	  <property name="password" value="${rabbitMQ.Password}"/>
	  <property name="virtualHost" value="${rabbitMQ.VirtualHost}"/>
	  
	 <!--   <property name="automaticRecoveryEnabled" value="true"/>
	  <property name="topologyRecoveryEnabled" value="true"/>-->
	</bean>
	<!-- 
	<util:map id="bindArgs" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object"> 
	  <entry key="x-queue-type" value="classic"/>
	</util:map>
	-->
	
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="300" />
		<property name="maxIdle" value="300" />
		<property name="minIdle" value="20" />
		<property name="testOnBorrow" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="numTestsPerEvictionRun" value="10" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="maxWait" value="10000" />
	</bean>
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy"> 
   		<constructor-arg ref="jedisPoolConfig" /> 
   		<constructor-arg value="${REDIS.HOST}" /> 
   		<constructor-arg type="int" value="${REDIS.PORT}" /> 
   		<constructor-arg type="int" value="10000"/>
   	</bean>

</beans>